
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.github.node-gradle.node' version '3.0.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

node {
	version = "16.14.0" // Use a recent version of Node.js
	npmVersion = "7.12.1" // Use a recent version of npm
	download = true
}


//task buildAngular(type: Exec) {
//	commandLine 'C:\\Users\\Aleksei\\AppData\\Roaming\\npm\\ng.cmd', 'build'
//}
//
//build.dependsOn buildAngular
//
//buildAngular.dependsOn(npm_install)
//build.dependsOn(buildAngular)

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

tasks.create('installFrontendDependencies', NpmTask) {
	dependsOn npmSetup
	workingDir = file('src/main/untitled4/')
	args = ['install'] // Specify the 'install' command
}

//jar {
//	archiveBaseName = 'gs-gradle'
//	archiveVersion =  '0.1.0'
//}

bootJar {
//	dependsOn buildAngular

	into('BOOT-INF/classes/static') {
		from "build/angular-dist"
	}

	manifest {
		attributes(
				'Start-Class': 'com.example.nova_films.NovaFilmsApplication'
		)
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2' // Optional, includes support for Jackson
	implementation 'org.apache.commons:commons-collections4:4.4'
	implementation 'org.springframework.kafka:spring-kafka:3.1.4'
	implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'
}

tasks.named('test') {
	useJUnitPlatform()
}


